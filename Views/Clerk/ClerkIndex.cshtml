@model CourtroomProject.COURTER.Clerk

@{
    ViewBag.Title = "ClerkIndex";
}

<h2>ClerkIndex</h2>


<style>
    .error {
        color: red;
    }
</style>

@using (Html.BeginForm("ClerkAdd", "Clerk", FormMethod.Post))
{
<div class="container">
    <div class="form-group">
        @Html.HiddenFor(x => x.Clerk_ID)
        <label>Name</label>

        @Html.ValidationMessageFor(x => x.name_clerk, "", new { @class = "error" })
        @Html.TextBoxFor(x => x.name_clerk, new { @class = "form-control" })
    </div>

    <div class="form-group">
        <label>Age</label>

        @Html.ValidationMessageFor(x => x.age_clerk, "", new { @class = "error" })
        @Html.TextBoxFor(x => x.age_clerk, new { @class = "form-control" })
    </div>

    <div class="form-group">
        <label>DOB</label>

        @Html.ValidationMessageFor(x => x.DOB_Clerk, "", new { @class = "error" })
        @Html.TextBoxFor(x => x.DOB_Clerk, new { @class = "form-control" })
    </div>

    <div class="form-group">
        <label>Address</label>

        @Html.ValidationMessageFor(x => x.Address_Clerk, "", new { @class = "error" })
        @Html.TextBoxFor(x => x.Address_Clerk, new { @class = "form-control" })
    </div>

    <div class="form-group">
        <label>Records Made</label>

        @Html.ValidationMessageFor(x => x.Records_made, "", new { @class = "error" })
        @Html.TextBoxFor(x => x.Records_made, new { @class = "form-control" })
    </div>

    <div class="form-group">
        <button type="submit" class="btn btn-primary">Submit</button>
        <button type="reset" class="btn btn-danger">Reset</button>
    </div>
</div>
}